{"version":3,"sources":["./projects/devsbc-components/src/lib/services/mode.service.ts","./projects/devsbc-components/src/lib/services/error-interceptor.service.ts","./src/environments/environment.ts","./src/app/components/language/language.component.ts","./src/app/components/language/language.component.html","./projects/devsbc-components/src/lib/services/auth.service.ts","./projects/devsbc-components/src/lib/services/token-interceptor.service.ts","./projects/devsbc-components/src/lib/services/theme.service.ts","./projects/devsbc-components/src/lib/services/language.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/access/access.component.ts","./src/app/components/access/access.component.html","./projects/devsbc-components/src/lib/services/style-manager.service.ts","./src/app/app.module.ts","./src/app/components/theme/theme.component.html","./src/app/components/theme/theme.component.ts","./src/app/models/server.model.ts","./src/app/app-routing.module.ts","./projects/devsbc-components/src/lib/devsbc.module.ts","./projects/devsbc-components/src/lib/components/devsbc-form/devsbc-form.component.html","./projects/devsbc-components/src/lib/components/devsbc-form/devsbc-form.component.ts","./src/app/components/form/form.component.ts","./src/app/components/form/form.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModeService {\n\n  public getMode(production: boolean): string {\n    if (this.existsMode()) {\n      return sessionStorage.getItem('mode') || 'prod';\n    } else {\n      const mode = (production) ? 'prod' : 'test';\n      this.setMode(mode, false);\n      return mode;\n    }\n  }\n\n  public setMode(mode: string, reload?: boolean): void {\n    sessionStorage.setItem('mode', mode);\n    if (reload) { location.reload(); }\n  }\n\n  private existsMode(): boolean {\n    return sessionStorage.getItem('mode') ? true : false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorInterceptor {\n\n  constructor(private auth: AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return next.handle(request).pipe(\n      catchError((err: any) => {\n        if (err instanceof HttpErrorResponse) {\n\n          if (err.status === 401 || err.status === 403) {\n            this.auth.logout();\n          }\n        }\n        return throwError(err);\n      }),\n      finalize(() => {})\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  server: 'http://localhost:3000/api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { LanguageService } from './../../../../projects/devsbc-components/src/lib/services/language.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-language',\n  templateUrl: './language.component.html',\n  styleUrls: ['./language.component.css']\n})\nexport class LanguageComponent implements OnInit {\n\n  lang!: string;\n  constructor(private languageService: LanguageService) {\n    this.languageService.getCurrentLang().subscribe((lang) => this.lang = lang);\n  }\n\n  ngOnInit(): void {\n  }\n\n  public switchLang(lang: string): void {\n    this.languageService.setCurrentLang(lang);\n  }\n\n}\n","<button mat-button [matMenuTriggerFor]=\"menu\">{{ (lang === 'es') ? 'ESPAÑOL' : 'ENGLISH' }}</button>\n<mat-menu #menu=\"matMenu\">\n    <button mat-menu-item [class]=\"lang === 'es' ? 'active' : ''\" (click)=\"switchLang('es')\">\n        <img  style=\"margin-right: 16px;\" src=\"./assets/flags/es.png\">\n        <span>ES</span>\n    </button>\n    <button mat-menu-item [class]=\"lang === 'en' ? 'active' : ''\" (click)=\"switchLang('en')\">\n        <img  style=\"margin-right: 16px;\" src=\"./assets/flags/en.png\">\n        <span>EN</span>\n    </button>\n</mat-menu>","import { AccessAuthModel } from './../models/access-auth.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private sessionName!: string;\n  private isMultiSession = false;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  public async signUp(access: AccessAuthModel): Promise<void> {\n    // User for your model in database in Token by JSONWebToken\n    const token = await this.http.post<string>(access.endpoint, access.user).toPromise();\n\n    // Decode the User Model\n    const base64 = token.split('.')[1];\n    const data = JSON.parse(window.atob(base64));\n\n    // The session generated for your server\n    const session = data.user;\n    session.access_token = token;\n\n    console.log(session);\n\n    this.saveSession(session, access);\n\n  }\n\n  public async signIn(access: AccessAuthModel): Promise<void> {\n    const token = await this.http.post<string>(access.endpoint, access.user).toPromise();\n    const base64 = token.split('.')[1];\n    const data = JSON.parse(window.atob(base64));\n    const session = data.user;\n    session.access_token = token;\n    console.log(session);\n    this.saveSession(session, access);\n  }\n\n  public async recoverPassword(endpoint: string, email: string): Promise<any> {\n    // tslint:disable-next-line: max-line-length\n    // You can return the data for recover, however i recommend you, send email to your customer and create a new flow based in URL tokenized\n    return await this.http.post<any>(endpoint, { email }).toPromise();\n  }\n\n  /* OPTIONAL */\n  public async verifyToken(endpoint: string, token: string): Promise<any> {\n    // Use this http call for verify token in your server\n    return await this.http.post<any>(endpoint, { token }).toPromise();\n  }\n\n  public async updatePassword(endpoint: string, email: string, password: string): Promise<any> {\n    return await this.http.post<any>(endpoint, { email, password }).toPromise();\n  }\n\n  /* ACCESS TO RESTRICTED ZONES */\n  // Data can be any object that use for verify or the user session\n  public async isAdmin(endpoint: string, data: any): Promise<any> {\n    // Use this http call for verify if user has permission\n    return await this.http.post<any>(endpoint, data).toPromise();\n  }\n\n  /* Use this in your Guards */\n  public isAuthenticated(): boolean {\n    if (this.isMultiSession) {\n      return sessionStorage.getItem(this.sessionName) ? true : false;\n    } else {\n      return localStorage.getItem(this.sessionName) ? true : false;\n    }\n  }\n\n  /* Get the Session Object */\n  public getSession(): any {\n    if (this.isAuthenticated()) {\n      if (this.isMultiSession) {\n        return JSON.parse(sessionStorage.getItem(this.sessionName) || '');\n      } else {\n        return JSON.parse(localStorage.getItem(this.sessionName) || '');\n      }\n    } else {\n      return null;\n    }\n  }\n\n  public getToken(): string {\n    const session = this.getSession();\n    if (session && session.access_token) {\n      return session.access_token;\n    } else {\n      return '';\n    }\n  }\n\n  public logout(urlToRedirect?: string): void {\n    if (this.isMultiSession) {\n      sessionStorage.removeItem(this.sessionName);\n    } else {\n      localStorage.removeItem(this.sessionName);\n    }\n    this.router.navigateByUrl(urlToRedirect || '/login');\n  }\n\n  private saveSession(session: any, access: AccessAuthModel): void {\n    try {\n      if (session) {\n        this.sessionName = access.sessionName;\n        if (access.multiSession) {\n          this.isMultiSession = true;\n          sessionStorage.setItem(access.sessionName, JSON.stringify(session));\n        } else {\n          this.isMultiSession = false;\n          localStorage.setItem(access.sessionName, JSON.stringify(session));\n        }\n      } else {\n        throw new Error('User is not defined');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(public auth: AuthService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.auth.getToken()}`\n      }\n    });\n    return next.handle(request);\n  }\n\n}\n","import { ThemeModel } from './../models/theme.model';\nimport { Injectable } from '@angular/core';\nimport { StyleManagerService } from './style-manager.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  readonly ANGULAR_MATERIAL_THEMES: ThemeModel[] = [\n    {\n      backgroundColor: '#fff',\n      buttonColor: '#ffc107',\n      headingColor: '#673ab7',\n      label: 'Deep Purple & Amber',\n      value: 'deeppurple-amber'\n    },\n    {\n      backgroundColor: '#fff',\n      buttonColor: '#ff4081',\n      headingColor: '#3f51b5',\n      label: 'Indigo & Pink',\n      value: 'indigo-pink'\n    },\n    {\n      backgroundColor: '#303030',\n      buttonColor: '#607d8b',\n      headingColor: '#e91e63',\n      label: 'Pink & Blue Grey',\n      value: 'pink-bluegrey'\n    },\n    {\n      backgroundColor: '#303030',\n      buttonColor: '#4caf50',\n      headingColor: '#9c27b0',\n      label: 'Purple & Green',\n      value: 'purple-green'\n    }\n  ];\n\n  constructor(private styleManager: StyleManagerService) { }\n\n  public getThemeOptions(): ThemeModel[] {\n    return this.ANGULAR_MATERIAL_THEMES;\n  }\n\n  public setTheme(themeToSet: string): void {\n    this.styleManager.setStyle(\n      'theme',\n      `https://material.angular.io/${themeToSet}.css`\n    );\n    localStorage.setItem('theme', themeToSet);\n  }\n\n  public getTheme(theme: string): string {\n    return localStorage.getItem('theme') || theme;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n\n  private defaultLang = 'es';\n  subject = new BehaviorSubject<string>(this.defaultLang);\n\n  public getCurrentLang(): Observable<string> {\n    return this.subject.asObservable();\n  }\n\n  public setCurrentLang(lang: string): void {\n    this.subject.next(lang);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'AppComponent';\n}\n","\n<app-theme></app-theme>\n<app-form></app-form>\n\n<app-access></app-access>\n\n<router-outlet></router-outlet>\n","import { AccessAuthModel } from './../../../../projects/devsbc-components/src/lib/models/access-auth.model';\nimport { environment } from 'src/environments/environment';\nimport { ServerModel } from './../../models/server.model';\nimport { ModeService } from './../../../../projects/devsbc-components/src/lib/services/mode.service';\nimport { AuthService } from './../../../../projects/devsbc-components/src/lib/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-access',\n  templateUrl: './access.component.html',\n  styleUrls: ['./access.component.css']\n})\nexport class AccessComponent implements OnInit {\n\n  /* EXAMPLE FOR AUTH SERVICE */\n  baseUrl!: string;\n  sessionName = 'my-session-name';\n\n  constructor(private authService: AuthService, private modeService: ModeService) {}\n\n  ngOnInit(): void {\n    // Init URL for Access\n    this.baseUrl = this.initServerConnection('ip', 'access');\n\n    // Enable this to test\n    // this.signIn();\n  }\n\n\n\n  public initServerConnection(app: string, endpoint: string): string {\n    const mode = this.modeService.getMode(environment.production);\n    const server = new ServerModel(mode, app);\n    const baseUrl = server.getBaseUrl(endpoint);\n    return baseUrl;\n  }\n\n  public async signIn(): Promise<void> {\n    const user = { email: '', password: '' };\n    const access: AccessAuthModel = {\n      endpoint: this.baseUrl + '/signin',\n      user,\n      sessionName: this.sessionName\n    };\n\n    // the function saves the session\n    await this.authService.signIn(access);\n    // show message\n    // redirect\n    // some stuff\n  }\n\n  public async signUp(): Promise<void> {\n    const user = { email: '', password: '', username: '', role: '' };\n    const access: AccessAuthModel = {\n      endpoint: this.baseUrl + '/signin',\n      user,\n      sessionName: this.sessionName,\n    };\n\n    // the function saves the session\n    await this.authService.signUp(access);\n    // show message\n    // redirect\n    // some stuff\n  }\n}\n","<h1 style=\"text-align: center;\">see console.log() for User Session</h1>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StyleManagerService {\n\n  public setStyle(key: string, href: string): void {\n    getLinkElementForKey(key).setAttribute('href', href);\n  }\n\n  public removeStyle(key: string): void {\n    const existingLinkElement = getExistingLinkElementByKey(key);\n    console.log(existingLinkElement);\n    if (existingLinkElement) {\n      document.head.removeChild(existingLinkElement);\n    }\n  }\n}\n\nfunction getLinkElementForKey(key: string): Element {\n  return getExistingLinkElementByKey(key) || createLinkElementWithKey(key);\n}\n\nfunction getExistingLinkElementByKey(key: string): Element | null {\n  return document.head.querySelector(\n    `link[rel='stylesheet'].${getClassNameForKey(key)}`\n  );\n}\n\nfunction createLinkElementWithKey(key: string): HTMLLinkElement {\n  const linkEl = document.createElement('link');\n  linkEl.setAttribute('rel', 'stylesheet');\n  linkEl.classList.add(getClassNameForKey(key));\n  document.head.appendChild(linkEl);\n  return linkEl;\n}\n\nfunction getClassNameForKey(key: string): string {\n  return `app-${key}`;\n}\n","import { DevsbcModule } from './../../projects/devsbc-components/src/lib/devsbc.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AccessComponent } from './components/access/access.component';\nimport { FormComponent } from './components/form/form.component';\nimport { ThemeComponent } from './components/theme/theme.component';\nimport { LanguageComponent } from './components/language/language.component';\n\n/* Angular Material */\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccessComponent,\n    FormComponent,\n    ThemeComponent,\n    LanguageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    DevsbcModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<mat-toolbar color=\"primary\">\n   <span>My App</span>\n   <span class=\"example-spacer\"></span>\n   <button \n    mat-icon-button\n    [matMenuTriggerFor]=\"menu\"\n    aria-label=\"Change Theme Menu\">\n    <mat-icon>palette</mat-icon>  \n    </button>\n\n    <mat-menu #menu=\"matMenu\">\n        <button\n        *ngFor=\"let option of options\"\n        mat-menu-item\n        (click)=\"changeTheme(option.value)\">\n        <mat-icon\n        role=\"img\" \n        svgicon=\"theme-example\"\n        aria-hidden=\"true\">\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\" \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            width=\"100%\" \n            height=\"100%\"\n            viewBox=\"0 0 80 80\" \n            fit=\"\" \n            preserveAspectRatio=\"xMidYMid meet\" \n            focusable=\"false\">\n            <defs>\n            <path\n                d=\"M77.87 0C79.05 0 80 .95 80 2.13v75.74c0 1.17-.95 2.13-2.13 2.13H2.13C.96 80 0 79.04 0 77.87V2.13C0 .95.96 0 2.13 0h75.74z\"\n                id=\"a\">\n            </path>\n            <path\n                d=\"M54 40c3.32 0 6 2.69 6 6 0 1.2 0-1.2 0 0 0 3.31-2.68 6-6 6H26c-3.31 0-6-2.69-6-6 0-1.2 0 1.2 0 0 0-3.31 2.69-6 6-6h28z\"\n                id=\"b\">\n            </path>\n            <path d=\"M0 0h80v17.24H0V0z\" id=\"c\"></path>\n            </defs>\n            <use xlink:href=\"#a\" [attr.fill]=\"option.backgroundColor\"></use>\n            <use xlink:href=\"#b\" [attr.fill]=\"option.buttonColor\"></use>\n            <use xlink:href=\"#c\" [attr.fill]=\"option.headingColor\"></use>\n        </svg>\n        </mat-icon>\n        <span>{{ option.label }}</span>\n    </button>\n    </mat-menu>\n  <app-language></app-language>\n</mat-toolbar>","import { ThemeService } from './../../../../projects/devsbc-components/src/lib/services/theme.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-theme',\n  templateUrl: './theme.component.html',\n  styleUrls: ['./theme.component.css']\n})\nexport class ThemeComponent implements OnInit {\n\n  theme = 'indigo-pink';\n  options: any;\n  constructor(private themeService: ThemeService) { }\n\n  ngOnInit(): void {\n    this.themeService.setTheme(this.theme);\n    this.options = this.themeService.getThemeOptions();\n  }\n\n  public changeTheme(theme: string): void {\n    this.themeService.setTheme(theme);\n  }\n\n}\n","import { environment } from 'src/environments/environment';\nexport class ServerModel {\n  private server = environment.server;\n  private version?: string;\n  private app: string;\n  private url: string;\n  private mode: string;\n\n  constructor(mode: string, app: string, version?: number) {\n    this.mode = '/' + mode;\n    this.app = '/' + app;\n    if (version) {\n      this.version = '/' + version;\n      this.url = this.server +  this.version + this.app + this.mode;\n    } else {\n      this.url = this.server + this.app + this.mode;\n    }\n  }\n\n  public getBaseUrl(endpoint?: string): string {\n    return this.url + ((endpoint) ? '/' + endpoint : '');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { ModeService } from './services/mode.service';\nimport { AuthService } from './services/auth.service';\nimport { ErrorInterceptor } from './services/error-interceptor.service';\nimport { TokenInterceptor } from './services/token-interceptor.service';\nimport { DevsbcFormComponent } from './components/devsbc-form/devsbc-form.component';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    DevsbcFormComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    HttpClientModule\n  ],\n  exports: [\n    DevsbcFormComponent\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DevsbcModule {\n  static forRoot(): any {\n    return {\n      ngModule: DevsbcModule,\n      providers: [AuthService, ModeService]\n    };\n  }\n }\n","<ng-container *ngIf=\"ready\">\n  <form [formGroup]=\"form\" class=\"animate__animated animate__fadeIn\">\n\n      <mat-card class=\"form-card\">\n\n          <mat-card-content>\n\n             <!-- SECTION FOR EXTRA ADDED FROM PARENT -->\n             <div #top >\n              <ng-content select=\"[slot='top']\"></ng-content>\n            </div>\n            <span *ngIf=\"top.children.length == 0\"></span>\n            <!-- SECTION FOR EXTRA ADDED FROM PARENT -->\n\n            <div class=\"container\">\n                <div class=\"row\" *ngFor=\"let row of data.view\">\n\n                    <div class=\"col\" *ngFor=\"let col of row.cols\">\n                        <mat-form-field class=\"full-width\">\n\n                            <ng-container *ngIf=\"col.element === 'input'\">\n                                <input matInput [placeholder]=\"col.placeholder\" [formControlName]=\"col.name\" [type]=\"col.type\" *ngIf=\"!col.callback\" [required]=\"col.required\">\n\n                                <ng-container *ngIf=\"col.callback\">\n\n                                    <ng-container *ngIf=\"col.callback.event === 'keyup'\">\n                                        <input matInput [placeholder]=\"col.placeholder\" [formControlName]=\"col.name\" [type]=\"col.type\" (keyup)=\"col.callback.function($event.target, form)\" [required]=\"col.required\">\n                                    </ng-container>\n\n                                </ng-container>\n                            </ng-container>\n\n                            <ng-container *ngIf=\"col.element === 'textarea'\">\n                                <textarea matInput [placeholder]=\"col.placeholder\" [formControlName]=\"col.name\" *ngIf=\"!col.callback\" rows=\"6\" [required]=\"col.required\"></textarea>\n\n                                <ng-container *ngIf=\"col.callback\">\n\n                                    <ng-container *ngIf=\"col.callback.event === 'keyup'\">\n                                        <textarea matInput [placeholder]=\"col.placeholder\" [formControlName]=\"col.name\" *ngIf=\"!col.callback\" (keyup)=\"col.callback.function($event.target, form)\" [required]=\"col.required\"></textarea>\n                                    </ng-container>\n\n                                </ng-container>\n                            </ng-container>\n\n                            <ng-container *ngIf=\"col.element === 'select'\">\n                                <mat-select [formControlName]=\"col.name\" [multiple]=\"col.multiple\" [placeholder]=\"col.placeholder\">\n                                    <mat-option *ngFor=\"let option of col.options\" [value]=\"option\">\n                                      {{ option.name }}\n                                    </mat-option>\n                                  </mat-select>\n                            </ng-container>\n\n                            <mat-error *ngIf=\"form.controls[col.name].hasError('required')\">\n                                {{ col.placeholder }} <strong> requerido</strong>\n                            </mat-error>\n\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n\n\n              <!-- SECTION FOR EXTRA INFO ADDED FROM PARENT -->\n              <div #bottom >\n                  <ng-content  select=\"[slot='bottom']\"></ng-content>\n              </div>\n              <span *ngIf=\"bottom.children.length == 0\"></span>\n              <!-- SECTION FOR EXTRA INFO ADDED FROM PARENT -->\n\n          </mat-card-content>\n\n          <mat-card-actions>\n              <ng-container *ngIf=\"!loading\">\n                  <ng-container>\n                      <button mat-raised-button color=\"primary\" style=\"width: 100%;\" [disabled]=\"data.disableButton\" (click)=\"onSubmit()\" >\n                          {{ data.buttonLabel }}\n                          <mat-icon *ngIf=\"loading\"><mat-spinner color=\"accent\" diameter=\"20\"></mat-spinner></mat-icon>\n                      </button>\n                  </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"loading\">\n                  <button mat-raised-button color=\"primary\" style=\"width: 100%;\" [disabled]=\"loading\" (click)=\"onSubmit()\" >\n                      {{ data.buttonLabel }}\n                      <mat-icon *ngIf=\"loading\"><mat-spinner color=\"accent\" diameter=\"20\"></mat-spinner></mat-icon>\n                  </button>\n              </ng-container>\n          </mat-card-actions>\n\n      </mat-card>\n\n  </form>\n</ng-container>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FormModel } from '../../models/devsbc-form.model';\n\n@Component({\n  selector: 'dbc-form',\n  templateUrl: './devsbc-form.component.html',\n  styleUrls: ['./devsbc-form.component.css']\n})\nexport class DevsbcFormComponent implements OnInit {\n\n  @Input() data = {} as FormModel;\n  form!: FormGroup;\n  loading = false;\n  ready = false;\n  canActivateButton!: boolean;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group(this.getForm());\n    this.ready = true;\n  }\n\n  private getForm(): any {\n    const formGroup: any = {};\n    for (const field of this.data.formData) {\n      formGroup[field.name] = [field.value, field.validator];\n    }\n    return formGroup;\n  }\n\n  public async onSubmit(): Promise<void> {\n    this.loading = true;\n    if (this.form.invalid) {\n      this.loading = false;\n      return;\n    }\n    this.loading = await this.data.onSubmit(this.form.value);\n  }\n\n}\n","import { FormModel } from './../../../../projects/devsbc-components/src/lib/models/devsbc-form.model';\nimport { Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  form: FormModel = {\n    view: [\n      { row: 1,\n        cols: [\n          { placeholder: 'Título', name: 'title', type: 'text', element: 'input', required: true },\n        ]\n      },\n      {\n        row: 2,\n        cols: [\n          { placeholder: 'Descripción', name: 'description', type: 'text', element: 'textarea', required: false },\n        ]\n      },\n      {\n        row: 3,\n        cols: [\n          { placeholder: 'Texto del botón', name: 'button', type: 'text', element: 'input', required: false },\n        ]\n      },\n      {\n        row: 4,\n        cols: [\n          { placeholder: 'Enlace del botón', name: 'href', type: 'text', element: 'input', required: false },\n        ]\n      }\n    ],\n    formData: [\n      { name: 'title', value: null, validator: Validators.required },\n      { name: 'description', value: null, validator: [] },\n      { name: 'button', value: null, validator: [] },\n      { name: 'href', value: null, validator: [] },\n    ],\n    disableButton: false,\n    buttonLabel: 'Crear Slider',\n    onSubmit: (data: any) => this.onSubmit(data) // call your submit function\n  };\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public async onSubmit(data: any): Promise<boolean> {\n    // Your logic Here\n    // The data is ready to usage\n    // return boolean response to stop spinner loading in form\n    return false;\n  }\n\n}\n","<dbc-form [data]=\"form\"></dbc-form>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}