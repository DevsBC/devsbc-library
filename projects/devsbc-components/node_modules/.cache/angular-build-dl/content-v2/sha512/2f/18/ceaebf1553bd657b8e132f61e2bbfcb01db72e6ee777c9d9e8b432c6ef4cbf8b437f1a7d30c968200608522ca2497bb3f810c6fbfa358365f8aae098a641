{"version":3,"sources":["webpack:///projects/devsbc-components/src/lib/services/mode.service.ts","webpack:///projects/devsbc-components/src/lib/services/error-interceptor.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/language/language.component.ts","webpack:///src/app/components/language/language.component.html","webpack:///projects/devsbc-components/src/lib/services/auth.service.ts","webpack:///projects/devsbc-components/src/lib/services/token-interceptor.service.ts","webpack:///projects/devsbc-components/src/lib/services/theme.service.ts","webpack:///projects/devsbc-components/src/lib/services/language.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/access/access.component.ts","webpack:///src/app/components/access/access.component.html","webpack:///projects/devsbc-components/src/lib/services/style-manager.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/theme/theme.component.html","webpack:///src/app/components/theme/theme.component.ts","webpack:///src/app/models/server.model.ts","webpack:///src/app/app-routing.module.ts","webpack:///projects/devsbc-components/src/lib/devsbc.module.ts","webpack:///projects/devsbc-components/src/lib/components/devsbc-form/devsbc-form.component.html","webpack:///projects/devsbc-components/src/lib/components/devsbc-form/devsbc-form.component.ts","webpack:///src/app/components/form/form.component.ts","webpack:///src/app/components/form/form.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ModeService","production","existsMode","sessionStorage","getItem","mode","setMode","reload","setItem","location","ErrorInterceptor","auth","request","next","handle","pipe","err","status","logout","environment","server","LanguageComponent","languageService","getCurrentLang","subscribe","lang","setCurrentLang","switchLang","AuthService","http","router","isMultiSession","access","post","endpoint","user","toPromise","token","base64","split","data","JSON","parse","window","atob","session","access_token","console","log","saveSession","email","password","sessionName","localStorage","isAuthenticated","getSession","urlToRedirect","removeItem","navigateByUrl","multiSession","stringify","Error","error","TokenInterceptor","clone","setHeaders","Authorization","getToken","ThemeService","styleManager","ANGULAR_MATERIAL_THEMES","backgroundColor","buttonColor","headingColor","label","value","themeToSet","setStyle","theme","LanguageService","defaultLang","subject","asObservable","AppComponent","title","AccessComponent","authService","modeService","baseUrl","initServerConnection","app","getMode","getBaseUrl","signIn","username","role","signUp","StyleManagerService","key","href","getLinkElementForKey","setAttribute","existingLinkElement","getExistingLinkElementByKey","document","head","removeChild","createLinkElementWithKey","querySelector","getClassNameForKey","linkEl","createElement","classList","add","appendChild","AppModule","ThemeComponent","themeService","setTheme","options","getThemeOptions","ServerModel","version","url","routes","AppRoutingModule","forRoot","DevsbcModule","ngModule","providers","provide","useClass","multi","DevsbcFormComponent","fb","loading","ready","form","group","getForm","formGroup","formData","field","name","validator","invalid","onSubmit","FormComponent","view","row","cols","placeholder","type","element","required","disableButton","buttonLabel","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModeService {\n\n  public getMode(production: boolean): string {\n    if (this.existsMode()) {\n      return sessionStorage.getItem('mode') || 'prod';\n    } else {\n      const mode = (production) ? 'prod' : 'test';\n      this.setMode(mode, false);\n      return mode;\n    }\n  }\n\n  public setMode(mode: string, reload?: boolean): void {\n    sessionStorage.setItem('mode', mode);\n    if (reload) { location.reload(); }\n  }\n\n  private existsMode(): boolean {\n    return sessionStorage.getItem('mode') ? true : false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorInterceptor {\n\n  constructor(private auth: AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return next.handle(request).pipe(\n      catchError((err: any) => {\n        if (err instanceof HttpErrorResponse) {\n\n          if (err.status === 401 || err.status === 403) {\n            this.auth.logout();\n          }\n        }\n        return throwError(err);\n      }),\n      finalize(() => {})\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  server: 'http://localhost:3000/api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { LanguageService } from './../../../../projects/devsbc-components/src/lib/services/language.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-language',\n  templateUrl: './language.component.html',\n  styleUrls: ['./language.component.css']\n})\nexport class LanguageComponent implements OnInit {\n\n  lang!: string;\n  constructor(private languageService: LanguageService) {\n    this.languageService.getCurrentLang().subscribe((lang) => this.lang = lang);\n  }\n\n  ngOnInit(): void {\n  }\n\n  public switchLang(lang: string): void {\n    this.languageService.setCurrentLang(lang);\n  }\n\n}\n","<button mat-button [matMenuTriggerFor]=\"menu\">{{ (lang === 'es') ? 'ESPAÑOL' : 'ENGLISH' }}</button>\n<mat-menu #menu=\"matMenu\">\n    <button mat-menu-item [class]=\"lang === 'es' ? 'active' : ''\" (click)=\"switchLang('es')\">\n        <img  style=\"margin-right: 16px;\" src=\"./assets/flags/es.png\">\n        <span>ES</span>\n    </button>\n    <button mat-menu-item [class]=\"lang === 'en' ? 'active' : ''\" (click)=\"switchLang('en')\">\n        <img  style=\"margin-right: 16px;\" src=\"./assets/flags/en.png\">\n        <span>EN</span>\n    </button>\n</mat-menu>","import { AccessAuthModel } from './../models/access-auth.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private sessionName!: string;\n  private isMultiSession = false;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  public async signUp(access: AccessAuthModel): Promise<void> {\n    // User for your model in database in Token by JSONWebToken\n    const token = await this.http.post<string>(access.endpoint, access.user).toPromise();\n\n    // Decode the User Model\n    const base64 = token.split('.')[1];\n    const data = JSON.parse(window.atob(base64));\n\n    // The session generated for your server\n    const session = data.user;\n    session.access_token = token;\n\n    console.log(session);\n\n    this.saveSession(session, access);\n\n  }\n\n  public async signIn(access: AccessAuthModel): Promise<void> {\n    const token = await this.http.post<string>(access.endpoint, access.user).toPromise();\n    const base64 = token.split('.')[1];\n    const data = JSON.parse(window.atob(base64));\n    const session = data.user;\n    session.access_token = token;\n    console.log(session);\n    this.saveSession(session, access);\n  }\n\n  public async recoverPassword(endpoint: string, email: string): Promise<any> {\n    // tslint:disable-next-line: max-line-length\n    // You can return the data for recover, however i recommend you, send email to your customer and create a new flow based in URL tokenized\n    return await this.http.post<any>(endpoint, { email }).toPromise();\n  }\n\n  /* OPTIONAL */\n  public async verifyToken(endpoint: string, token: string): Promise<any> {\n    // Use this http call for verify token in your server\n    return await this.http.post<any>(endpoint, { token }).toPromise();\n  }\n\n  public async updatePassword(endpoint: string, email: string, password: string): Promise<any> {\n    return await this.http.post<any>(endpoint, { email, password }).toPromise();\n  }\n\n  /* ACCESS TO RESTRICTED ZONES */\n  // Data can be any object that use for verify or the user session\n  public async isAdmin(endpoint: string, data: any): Promise<any> {\n    // Use this http call for verify if user has permission\n    return await this.http.post<any>(endpoint, data).toPromise();\n  }\n\n  /* Use this in your Guards */\n  public isAuthenticated(): boolean {\n    if (this.isMultiSession) {\n      return sessionStorage.getItem(this.sessionName) ? true : false;\n    } else {\n      return localStorage.getItem(this.sessionName) ? true : false;\n    }\n  }\n\n  /* Get the Session Object */\n  public getSession(): any {\n    if (this.isAuthenticated()) {\n      if (this.isMultiSession) {\n        return JSON.parse(sessionStorage.getItem(this.sessionName) || '');\n      } else {\n        return JSON.parse(localStorage.getItem(this.sessionName) || '');\n      }\n    } else {\n      return null;\n    }\n  }\n\n  public getToken(): string {\n    const session = this.getSession();\n    if (session && session.access_token) {\n      return session.access_token;\n    } else {\n      return '';\n    }\n  }\n\n  public logout(urlToRedirect?: string): void {\n    if (this.isMultiSession) {\n      sessionStorage.removeItem(this.sessionName);\n    } else {\n      localStorage.removeItem(this.sessionName);\n    }\n    this.router.navigateByUrl(urlToRedirect || '/login');\n  }\n\n  private saveSession(session: any, access: AccessAuthModel): void {\n    try {\n      if (session) {\n        this.sessionName = access.sessionName;\n        if (access.multiSession) {\n          this.isMultiSession = true;\n          sessionStorage.setItem(access.sessionName, JSON.stringify(session));\n        } else {\n          this.isMultiSession = false;\n          localStorage.setItem(access.sessionName, JSON.stringify(session));\n        }\n      } else {\n        throw new Error('User is not defined');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(public auth: AuthService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.auth.getToken()}`\n      }\n    });\n    return next.handle(request);\n  }\n\n}\n","import { ThemeModel } from './../models/theme.model';\nimport { Injectable } from '@angular/core';\nimport { StyleManagerService } from './style-manager.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  readonly ANGULAR_MATERIAL_THEMES: ThemeModel[] = [\n    {\n      backgroundColor: '#fff',\n      buttonColor: '#ffc107',\n      headingColor: '#673ab7',\n      label: 'Deep Purple & Amber',\n      value: 'deeppurple-amber'\n    },\n    {\n      backgroundColor: '#fff',\n      buttonColor: '#ff4081',\n      headingColor: '#3f51b5',\n      label: 'Indigo & Pink',\n      value: 'indigo-pink'\n    },\n    {\n      backgroundColor: '#303030',\n      buttonColor: '#607d8b',\n      headingColor: '#e91e63',\n      label: 'Pink & Blue Grey',\n      value: 'pink-bluegrey'\n    },\n    {\n      backgroundColor: '#303030',\n      buttonColor: '#4caf50',\n      headingColor: '#9c27b0',\n      label: 'Purple & Green',\n      value: 'purple-green'\n    }\n  ];\n\n  constructor(private styleManager: StyleManagerService) { }\n\n  public getThemeOptions(): ThemeModel[] {\n    return this.ANGULAR_MATERIAL_THEMES;\n  }\n\n  public setTheme(themeToSet: string): void {\n    this.styleManager.setStyle(\n      'theme',\n      `https://material.angular.io/${themeToSet}.css`\n    );\n    localStorage.setItem('theme', themeToSet);\n  }\n\n  public getTheme(theme: string): string {\n    return localStorage.getItem('theme') || theme;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n\n  private defaultLang = 'es';\n  subject = new BehaviorSubject<string>(this.defaultLang);\n\n  public getCurrentLang(): Observable<string> {\n    return this.subject.asObservable();\n  }\n\n  public setCurrentLang(lang: string): void {\n    this.subject.next(lang);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'AppComponent';\n}\n","\n<app-theme></app-theme>\n<app-form></app-form>\n\n<app-access></app-access>\n\n<router-outlet></router-outlet>\n","import { AccessAuthModel } from './../../../../projects/devsbc-components/src/lib/models/access-auth.model';\nimport { environment } from 'src/environments/environment';\nimport { ServerModel } from './../../models/server.model';\nimport { ModeService } from './../../../../projects/devsbc-components/src/lib/services/mode.service';\nimport { AuthService } from './../../../../projects/devsbc-components/src/lib/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-access',\n  templateUrl: './access.component.html',\n  styleUrls: ['./access.component.css']\n})\nexport class AccessComponent implements OnInit {\n\n  /* EXAMPLE FOR AUTH SERVICE */\n  baseUrl!: string;\n  sessionName = 'my-session-name';\n\n  constructor(private authService: AuthService, private modeService: ModeService) {}\n\n  ngOnInit(): void {\n    // Init URL for Access\n    this.baseUrl = this.initServerConnection('ip', 'access');\n\n    // Enable this to test\n    // this.signIn();\n  }\n\n\n\n  public initServerConnection(app: string, endpoint: string): string {\n    const mode = this.modeService.getMode(environment.production);\n    const server = new ServerModel(mode, app);\n    const baseUrl = server.getBaseUrl(endpoint);\n    return baseUrl;\n  }\n\n  public async signIn(): Promise<void> {\n    const user = { email: '', password: '' };\n    const access: AccessAuthModel = {\n      endpoint: this.baseUrl + '/signin',\n      user,\n      sessionName: this.sessionName\n    };\n\n    // the function saves the session\n    await this.authService.signIn(access);\n    // show message\n    // redirect\n    // some stuff\n  }\n\n  public async signUp(): Promise<void> {\n    const user = { email: '', password: '', username: '', role: '' };\n    const access: AccessAuthModel = {\n      endpoint: this.baseUrl + '/signin',\n      user,\n      sessionName: this.sessionName,\n    };\n\n    // the function saves the session\n    await this.authService.signUp(access);\n    // show message\n    // redirect\n    // some stuff\n  }\n}\n","<h1 style=\"text-align: center;\">see console.log() for User Session</h1>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StyleManagerService {\n\n  public setStyle(key: string, href: string): void {\n    getLinkElementForKey(key).setAttribute('href', href);\n  }\n\n  public removeStyle(key: string): void {\n    const existingLinkElement = getExistingLinkElementByKey(key);\n    console.log(existingLinkElement);\n    if (existingLinkElement) {\n      document.head.removeChild(existingLinkElement);\n    }\n  }\n}\n\nfunction getLinkElementForKey(key: string): Element {\n  return getExistingLinkElementByKey(key) || createLinkElementWithKey(key);\n}\n\nfunction getExistingLinkElementByKey(key: string): Element | null {\n  return document.head.querySelector(\n    `link[rel='stylesheet'].${getClassNameForKey(key)}`\n  );\n}\n\nfunction createLinkElementWithKey(key: string): HTMLLinkElement {\n  const linkEl = document.createElement('link');\n  linkEl.setAttribute('rel', 'stylesheet');\n  linkEl.classList.add(getClassNameForKey(key));\n  document.head.appendChild(linkEl);\n  return linkEl;\n}\n\nfunction getClassNameForKey(key: string): string {\n  return `app-${key}`;\n}\n","import { DevsbcModule } from './../../projects/devsbc-components/src/lib/devsbc.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AccessComponent } from './components/access/access.component';\nimport { FormComponent } from './components/form/form.component';\nimport { ThemeComponent } from './components/theme/theme.component';\nimport { LanguageComponent } from './components/language/language.component';\n\n/* Angular Material */\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccessComponent,\n    FormComponent,\n    ThemeComponent,\n    LanguageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    DevsbcModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<mat-toolbar color=\"primary\">\n   <span>My App</span>\n   <span class=\"example-spacer\"></span>\n   <button \n    mat-icon-button\n    [matMenuTriggerFor]=\"menu\"\n    aria-label=\"Change Theme Menu\">\n    <mat-icon>palette</mat-icon>  \n    </button>\n\n    <mat-menu #menu=\"matMenu\">\n        <button\n        *ngFor=\"let option of options\"\n        mat-menu-item\n        (click)=\"changeTheme(option.value)\">\n        <mat-icon\n        role=\"img\" \n        svgicon=\"theme-example\"\n        aria-hidden=\"true\">\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\" \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            width=\"100%\" \n            height=\"100%\"\n            viewBox=\"0 0 80 80\" \n            fit=\"\" \n            preserveAspectRatio=\"xMidYMid meet\" \n            focusable=\"false\">\n            <defs>\n            <path\n                d=\"M77.87 0C79.05 0 80 .95 80 2.13v75.74c0 1.17-.95 2.13-2.13 2.13H2.13C.96 80 0 79.04 0 77.87V2.13C0 .95.96 0 2.13 0h75.74z\"\n                id=\"a\">\n            </path>\n            <path\n                d=\"M54 40c3.32 0 6 2.69 6 6 0 1.2 0-1.2 0 0 0 3.31-2.68 6-6 6H26c-3.31 0-6-2.69-6-6 0-1.2 0 1.2 0 0 0-3.31 2.69-6 6-6h28z\"\n                id=\"b\">\n            </path>\n            <path d=\"M0 0h80v17.24H0V0z\" id=\"c\"></path>\n            </defs>\n            <use xlink:href=\"#a\" [attr.fill]=\"option.backgroundColor\"></use>\n            <use xlink:href=\"#b\" [attr.fill]=\"option.buttonColor\"></use>\n            <use xlink:href=\"#c\" [attr.fill]=\"option.headingColor\"></use>\n        </svg>\n        </mat-icon>\n        <span>{{ option.label }}</span>\n    </button>\n    </mat-menu>\n  <app-language></app-language>\n</mat-toolbar>","import { ThemeService } from './../../../../projects/devsbc-components/src/lib/services/theme.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-theme',\n  templateUrl: './theme.component.html',\n  styleUrls: ['./theme.component.css']\n})\nexport class ThemeComponent implements OnInit {\n\n  theme = 'indigo-pink';\n  options: any;\n  constructor(private themeService: ThemeService) { }\n\n  ngOnInit(): void {\n    this.themeService.setTheme(this.theme);\n    this.options = this.themeService.getThemeOptions();\n  }\n\n  public changeTheme(theme: string): void {\n    this.themeService.setTheme(theme);\n  }\n\n}\n","import { environment } from 'src/environments/environment';\nexport class ServerModel {\n  private server = environment.server;\n  private version?: string;\n  private app: string;\n  private url: string;\n  private mode: string;\n\n  constructor(mode: string, app: string, version?: number) {\n    this.mode = '/' + mode;\n    this.app = '/' + app;\n    if (version) {\n      this.version = '/' + version;\n      this.url = this.server +  this.version + this.app + this.mode;\n    } else {\n      this.url = this.server + this.app + this.mode;\n    }\n  }\n\n  public getBaseUrl(endpoint?: string): string {\n    return this.url + ((endpoint) ? '/' + endpoint : '');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { ModeService } from './services/mode.service';\nimport { AuthService } from './services/auth.service';\nimport { ErrorInterceptor } from './services/error-interceptor.service';\nimport { TokenInterceptor } from './services/token-interceptor.service';\nimport { DevsbcFormComponent } from './components/devsbc-form/devsbc-form.component';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    DevsbcFormComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    HttpClientModule\n  ],\n  exports: [\n    DevsbcFormComponent\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DevsbcModule {\n  static forRoot(): any {\n    return {\n      ngModule: DevsbcModule,\n      providers: [AuthService, ModeService]\n    };\n  }\n }\n","<ng-container *ngIf=\"ready\">\n  <form [formGroup]=\"form\" class=\"animate__animated animate__fadeIn\">\n\n      <mat-card class=\"form-card\">\n\n          <mat-card-content>\n\n             <!-- SECTION FOR EXTRA ADDED FROM PARENT -->\n             <div #top >\n              <ng-content select=\"[slot='top']\"></ng-content>\n            </div>\n            <span *ngIf=\"top.children.length == 0\"></span>\n            <!-- SECTION FOR EXTRA ADDED FROM PARENT -->\n\n            <div class=\"container\">\n                <div class=\"row\" *ngFor=\"let row of data.view\">\n\n                    <div class=\"col\" *ngFor=\"let col of row.cols\">\n                        <mat-form-field class=\"full-width\">\n\n                            <ng-container *ngIf=\"col.element === 'input'\">\n                                <input matInput [placeholder]=\"col.placeholder\" [formControlName]=\"col.name\" [type]=\"col.type\" *ngIf=\"!col.callback\" [required]=\"col.required\">\n\n                                <ng-container *ngIf=\"col.callback\">\n\n                                    <ng-container *ngIf=\"col.callback.event === 'keyup'\">\n                                        <input matInput [placeholder]=\"col.placeholder\" [formControlName]=\"col.name\" [type]=\"col.type\" (keyup)=\"col.callback.function($event.target, form)\" [required]=\"col.required\">\n                                    </ng-container>\n\n                                </ng-container>\n                            </ng-container>\n\n                            <ng-container *ngIf=\"col.element === 'textarea'\">\n                                <textarea matInput [placeholder]=\"col.placeholder\" [formControlName]=\"col.name\" *ngIf=\"!col.callback\" rows=\"6\" [required]=\"col.required\"></textarea>\n\n                                <ng-container *ngIf=\"col.callback\">\n\n                                    <ng-container *ngIf=\"col.callback.event === 'keyup'\">\n                                        <textarea matInput [placeholder]=\"col.placeholder\" [formControlName]=\"col.name\" *ngIf=\"!col.callback\" (keyup)=\"col.callback.function($event.target, form)\" [required]=\"col.required\"></textarea>\n                                    </ng-container>\n\n                                </ng-container>\n                            </ng-container>\n\n                            <ng-container *ngIf=\"col.element === 'select'\">\n                                <mat-select [formControlName]=\"col.name\" [multiple]=\"col.multiple\" [placeholder]=\"col.placeholder\">\n                                    <mat-option *ngFor=\"let option of col.options\" [value]=\"option\">\n                                      {{ option.name }}\n                                    </mat-option>\n                                  </mat-select>\n                            </ng-container>\n\n                            <mat-error *ngIf=\"form.controls[col.name].hasError('required')\">\n                                {{ col.placeholder }} <strong> requerido</strong>\n                            </mat-error>\n\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n\n\n              <!-- SECTION FOR EXTRA INFO ADDED FROM PARENT -->\n              <div #bottom >\n                  <ng-content  select=\"[slot='bottom']\"></ng-content>\n              </div>\n              <span *ngIf=\"bottom.children.length == 0\"></span>\n              <!-- SECTION FOR EXTRA INFO ADDED FROM PARENT -->\n\n          </mat-card-content>\n\n          <mat-card-actions>\n              <ng-container *ngIf=\"!loading\">\n                  <ng-container>\n                      <button mat-raised-button color=\"primary\" style=\"width: 100%;\" [disabled]=\"data.disableButton\" (click)=\"onSubmit()\" >\n                          {{ data.buttonLabel }}\n                          <mat-icon *ngIf=\"loading\"><mat-spinner color=\"accent\" diameter=\"20\"></mat-spinner></mat-icon>\n                      </button>\n                  </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"loading\">\n                  <button mat-raised-button color=\"primary\" style=\"width: 100%;\" [disabled]=\"loading\" (click)=\"onSubmit()\" >\n                      {{ data.buttonLabel }}\n                      <mat-icon *ngIf=\"loading\"><mat-spinner color=\"accent\" diameter=\"20\"></mat-spinner></mat-icon>\n                  </button>\n              </ng-container>\n          </mat-card-actions>\n\n      </mat-card>\n\n  </form>\n</ng-container>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FormModel } from '../../models/devsbc-form.model';\n\n@Component({\n  selector: 'dbc-form',\n  templateUrl: './devsbc-form.component.html',\n  styleUrls: ['./devsbc-form.component.css']\n})\nexport class DevsbcFormComponent implements OnInit {\n\n  @Input() data = {} as FormModel;\n  form!: FormGroup;\n  loading = false;\n  ready = false;\n  canActivateButton!: boolean;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group(this.getForm());\n    this.ready = true;\n  }\n\n  private getForm(): any {\n    const formGroup: any = {};\n    for (const field of this.data.formData) {\n      formGroup[field.name] = [field.value, field.validator];\n    }\n    return formGroup;\n  }\n\n  public async onSubmit(): Promise<void> {\n    this.loading = true;\n    if (this.form.invalid) {\n      this.loading = false;\n      return;\n    }\n    this.loading = await this.data.onSubmit(this.form.value);\n  }\n\n}\n","import { FormModel } from './../../../../projects/devsbc-components/src/lib/models/devsbc-form.model';\nimport { Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  form: FormModel = {\n    view: [\n      { row: 1,\n        cols: [\n          { placeholder: 'Título', name: 'title', type: 'text', element: 'input', required: true },\n        ]\n      },\n      {\n        row: 2,\n        cols: [\n          { placeholder: 'Descripción', name: 'description', type: 'text', element: 'textarea', required: false },\n        ]\n      },\n      {\n        row: 3,\n        cols: [\n          { placeholder: 'Texto del botón', name: 'button', type: 'text', element: 'input', required: false },\n        ]\n      },\n      {\n        row: 4,\n        cols: [\n          { placeholder: 'Enlace del botón', name: 'href', type: 'text', element: 'input', required: false },\n        ]\n      }\n    ],\n    formData: [\n      { name: 'title', value: null, validator: Validators.required },\n      { name: 'description', value: null, validator: [] },\n      { name: 'button', value: null, validator: [] },\n      { name: 'href', value: null, validator: [] },\n    ],\n    disableButton: false,\n    buttonLabel: 'Crear Slider',\n    onSubmit: (data: any) => this.onSubmit(data) // call your submit function\n  };\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public async onSubmit(data: any): Promise<boolean> {\n    // Your logic Here\n    // The data is ready to usage\n    // return boolean response to stop spinner loading in form\n    return false;\n  }\n\n}\n","<dbc-form [data]=\"form\"></dbc-form>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}